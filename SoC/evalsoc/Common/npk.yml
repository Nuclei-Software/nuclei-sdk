## Package Base Information
name: ssp-nsdk_evalsoc
owner: nuclei
description: Nuclei EvalSoC Support Package
type: ssp
keywords:
  - soc
  - risc-v
  - nuclei
license: Apache-2.0
homepage: https://nucleisys.com/developboard.php#ddr200t

packinfo:
  core_vendor: Nuclei
  vendor: Nuclei
  name: Nuclei FPGA Evaluation SoC
  doc:
    website: https://nucleisys.com/developboard.php#ddr200t # Website
    datasheet: https://nucleisys.com/developboard.php#ddr200t # SoC datasheet
    usermanual: https://nucleisys.com/developboard.php#ddr200t # User Manual
    extra:
      - uri: # file path or web link
        description: # description

## Package Dependency
dependencies:
  - name: csp-nsdk_nmsis
    version:

## Package Configurations
configuration:
  nuclei_core:
    default_value: n307fd
    type: choice
    global: true
    description: Nuclei RISC-V Core
    choices:
      - name: n200
        arch: rv32imc
        abi: ilp32
        cmodel: medlow
        tune: nuclei-200-series
        description: N200 Core(ARCH=rv32imc, ABI=ilp32)
      - name: n201
        arch: rv32iac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-200-series
        description: N201 Core(ARCH=rv32iac, ABI=ilp32)
      - name: n201e
        arch: rv32eac
        abi: ilp32e
        cmodel: medlow
        tune: nuclei-200-series
        description: N201E Core(ARCH=rv32eac, ABI=ilp32e)
      - name: n203
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-200-series
        description: N203 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n203e
        arch: rv32emac
        abi: ilp32e
        cmodel: medlow
        tune: nuclei-200-series
        description: N203E Core(ARCH=rv32emac, ABI=ilp32e)
      - name: n205
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-200-series
        description: N205 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n205e
        arch: rv32emac
        abi: ilp32e
        cmodel: medlow
        tune: nuclei-200-series
        description: N205E Core(ARCH=rv32emac, ABI=ilp32e)
      - name: n300
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-300-series
        description: N300 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n300f
        arch: rv32imafc
        abi: ilp32f
        cmodel: medlow
        tune: nuclei-300-series
        description: N300F Core(ARCH=rv32imafc, ABI=ilp32f)
      - name: n300fd
        arch: rv32imafdc
        abi: ilp32d
        cmodel: medlow
        tune: nuclei-300-series
        description: N300FD Core(ARCH=rv32imafdc, ABI=ilp32d)
      - name: n305
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-300-series
        description: N305 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n307
        arch: rv32imafc
        abi: ilp32f
        cmodel: medlow
        tune: nuclei-300-series
        description: N307 Core(ARCH=rv32imafc, ABI=ilp32f)
      - name: n307fd
        arch: rv32imafdc
        abi: ilp32d
        cmodel: medlow
        tune: nuclei-300-series
        description: N307FD Core(ARCH=rv32imafdc, ABI=ilp32d)
      - name: n600
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-300-series
        description: N600 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n600f
        arch: rv32imafc
        abi: ilp32f
        cmodel: medlow
        tune: nuclei-600-series
        description: N600F Core(ARCH=rv32imafc, ABI=ilp32f)
      - name: n600fd
        arch: rv32imafdc
        abi: ilp32d
        cmodel: medlow
        tune: nuclei-600-series
        description: N600FD Core(ARCH=rv32imafdc, ABI=ilp32d)
      - name: nx600
        arch: rv64imac
        abi: lp64
        cmodel: medany
        tune: nuclei-600-series
        description: NX600 Core(ARCH=rv64imac, ABI=lp64)
      - name: nx600f
        arch: rv64imafc
        abi: lp64f
        cmodel: medany
        tune: nuclei-600-series
        description: NX600F Core(ARCH=rv64imafc, ABI=lp64f)
      - name: nx600fd
        arch: rv64imafdc
        abi: lp64d
        cmodel: medany
        tune: nuclei-600-series
        description: NX600FD Core(ARCH=rv64imafdc, ABI=lp64d)
      - name: ux600
        arch: rv64imac
        abi: lp64
        cmodel: medany
        tune: nuclei-600-series
        description: UX600 Core(ARCH=rv64imac, ABI=lp64)
      - name: ux600f
        arch: rv64imafc
        abi: lp64f
        cmodel: medany
        tune: nuclei-600-series
        description: UX600F Core(ARCH=rv64imafc, ABI=lp64f)
      - name: ux600fd
        arch: rv64imafdc
        abi: lp64d
        cmodel: medany
        tune: nuclei-600-series
        description: UX600FD Core(ARCH=rv64imafdc, ABI=lp64d)
      - name: n900
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-900-series
        description: N900 Core(ARCH=rv32imac, ABI=ilp32)
      - name: n900f
        arch: rv32imafc
        abi: ilp32f
        cmodel: medlow
        tune: nuclei-900-series
        description: N900F Core(ARCH=rv32imafc, ABI=ilp32f)
      - name: n900fd
        arch: rv32imafdc
        abi: ilp32d
        cmodel: medlow
        tune: nuclei-900-series
        description: N900FD Core(ARCH=rv32imafdc, ABI=ilp32d)
      - name: nx900
        arch: rv64imac
        abi: lp64
        cmodel: medany
        tune: nuclei-900-series
        description: NX900 Core(ARCH=rv64imac, ABI=lp64)
      - name: nx900f
        arch: rv64imafc
        abi: lp64f
        cmodel: medany
        tune: nuclei-900-series
        description: NX900F Core(ARCH=rv64imafc, ABI=lp64f)
      - name: nx900fd
        arch: rv64imafdc
        abi: lp64d
        cmodel: medany
        tune: nuclei-900-series
        description: NX900FD Core(ARCH=rv64imafdc, ABI=lp64d)
      - name: ux900
        arch: rv64imac
        abi: lp64
        cmodel: medany
        tune: nuclei-900-series
        description: UX900 Core(ARCH=rv64imac, ABI=lp64)
      - name: ux900f
        arch: rv64imafc
        abi: lp64f
        cmodel: medany
        tune: nuclei-900-series
        description: UX900F Core(ARCH=rv64imafc, ABI=lp64f)
      - name: ux900fd
        arch: rv64imafdc
        abi: lp64d
        cmodel: medany
        tune: nuclei-900-series
        description: UX900FD Core(ARCH=rv64imafdc, ABI=lp64d)
  nuclei_archext:
    default_value: []
    type: multicheckbox
    global: true
    description: Nuclei ARCH Extensions
    choices:
      - name: b
        description: Bitmanip Extension
      - name: p
        description: Packed SIMD Extension
      - name: v
        description: Vector Extension
  nuclei_cache:
    default_value: []
    type: multicheckbox
    global: true
    description: Nuclei Cache Extensions
    choices:
      - name: ic
        description: ICache Extension
      - name: dc
        description: DCache Extension
      - name: ccm
        description: CCM Extension
  nuclei_smp:
    default_value: 0
    type: choice
    global: true
    description: Nuclei SMP Count
    choices:
      - name: 0
        description: No SMP
      - name: 1
        description: 1 Core
      - name: 2
        description: 2 Core
      - name: 4
        description: 4 Core
      - name: 6
        description: 6 Core
      - name: 8
        description: 8 Core
      - name: 10
        description: 10 Core
      - name: 12
        description: 12 Core
      - name: 14
        description: 14 Core
      - name: 16
        description: 16 Core
  boothartid:
    default_value: 0
    type: choice
    global: true
    description: Boot HartID
    choices:
      - name: 0
        description: Hart 0
      - name: 1
        description: Hart 1
      - name: 2
        description: Hart 2
      - name: 3
        description: Hart 3
      - name: 4
        description: Hart 4
      - name: 5
        description: Hart 5
      - name: 6
        description: Hart 6
      - name: 7
        description: Hart 7
      - name: 8
        description: Hart 8
      - name: 9
        description: Hart 9
      - name: 10
        description: Hart 10
      - name: 11
        description: Hart 11
      - name: 12
        description: Hart 12
      - name: 13
        description: Hart 13
      - name: 14
        description: Hart 14
      - name: 15
        description: Hart 15
  heapsz:
      value: ""
      type: text
      description: Heap Size
  stacksz:
      value: ""
      type: text
      description: Stack Size Per CPU
  stdclib:
    default_value: newlib_nano
    type: choice
    global: true
    description: Standard C Library
    choices:
      - name: newlib_full
        description: newlib with full feature
      - name: newlib_fast
        description: newlib nano with printf/scanf float
      - name: newlib_small
        description: newlib nano with printf float
      - name: newlib_nano
        description: newlib nano without printf/scanf float
      - name: libncrt_fast
        description: nuclei c runtime library, optimized for speed
      - name: libncrt_balanced
        description: nuclei c runtime library, balanced, full feature
      - name: libncrt_small
        description: nuclei c runtime library, optimized for size, full feature
      - name: libncrt_nano
        description: nuclei c runtime library, optimized for size, no float support
      - name: libncrt_pico
        description: nuclei c runtime library, optimized for size, no long/long long support
      - name: nostd
        description: no std c library will be used, and don't search the standard system directories for header files
      - name: nospec
        description: no std c library will be used, not pass any --specs options
  linker_script:
    default_value: ""
    type: text
    global: false
    description: Alternative linker script

## Source Code Management
codemanage:
  installdir: evalsoc
  copyfiles:
    - path: ["Source/*.c", "Source/Drivers/*.c", "Source/GCC/", "Include/", "evalsoc.svd"]
    - path: ["Source/Stubs/newlib"]
      condition: $( startswith(${stdclib}, "newlib") )
    - path: ["Source/Stubs/libncrt"]
      condition: $( startswith(${stdclib}, "libncrt") )
  incdirs:
    - path: ["Include/"]

## Set Configuration for other packages
setconfig:
  - config: nmsislibarch
    value: ${nuclei_core.arch}$(join(${nuclei_archext},''))

## Debug Configuration for this SoC
debugconfig:
  - type: openocd
    description: Nuclei OpenOCD
    svd: evalsoc.svd

  - type: qemu
    description: Nuclei QEMU
    svd: evalsoc.svd

  - type: jlink
    description: Segger Jlink
    svd: evalsoc.svd

## Build Configuration
buildconfig:
  - type: gcc
    description: Nuclei GNU Toolchain
    cross_prefix: riscv-nuclei-elf- # optional
    common_flags: # flags need to be combined together across all packages
      - flags: -g -fno-common -ffunction-sections -fdata-sections
      - flags: -march=${nuclei_core.arch}$(join(${nuclei_archext},'')) -mabi=${nuclei_core.abi}
      - flags: -mtune=${nuclei_core.tune}
        condition: $( ${nuclei_core.tune} != "" )
      - flags: -mcmodel=${nuclei_core.cmodel}
      - flags:
        condition: $( ${stdclib} == "newlib_full" )
      - flags: --specs=nano.specs -u _printf_float -u _scanf_float
        condition: $( ${stdclib} == "newlib_fast" )
      - flags: --specs=nano.specs -u _printf_float
        condition: $( ${stdclib} == "newlib_small" )
      - flags: --specs=nano.specs
        condition: $( ${stdclib} == "newlib_nano" )
      - flags: --specs=${stdclib}.specs
        condition: $( startswith(${stdclib}, "libncrt") )
      - flags: -nostdinc
        condition: $( ${stdclib} == "nostd" )
      - flags:
        condition: $( ${stdclib} == "nospec" )
    ldflags:
      - flags: -nostartfiles
      - flags: -lstdc++
        condition: $( startswith(${stdclib}, "newlib") )
      - flags: -Wl,--gc-sections -Wl,--check-sections
      - flags: -u _isatty -u _write -u _sbrk -u _read -u _close -u _fstat -u _lseek
        condition: $( startswith(${stdclib}, "newlib") )
      - flags: -Wl,--defsym=__SMP_CPU_CNT=${nuclei_smp}
        condition: $( ${nuclei_smp} > 1 )
      - flags: -Wl,--defsym=__HEAP_SIZE=${heapsz}
        condition: $( ${heapsz} != "" )
      - flags: -Wl,--defsym=__STACK_SIZE=${stacksz}
        condition: $( ${stacksz} != "" )
    cflags:
    asmflags:
      - flags: -x assembler-with-cpp
    cxxflags:
    common_defines:
      - defines: SMP_CPU_CNT=${nuclei_smp}
        condition: $( ${nuclei_smp} > 1 )
      - defines: BOOT_HARTID=${boothartid}
      - defines: RUNMODE_IC_EN=1
        condition: $( contains(${nuclei_cache}, "ic"))
      - defines: RUNMODE_IC_EN=0
        condition: $( ! contains(${nuclei_cache}, "ic"))
      - defines: RUNMODE_DC_EN=1
        condition: $( contains(${nuclei_cache}, "dc"))
      - defines: RUNMODE_DC_EN=0
        condition: $( ! contains(${nuclei_cache}, "dc"))
      - defines: RUNMODE_CCM_EN=1
        condition: $( contains(${nuclei_cache}, "ccm"))
      - defines: RUNMODE_CCM_EN=0
        condition: $( ! contains(${nuclei_cache}, "ccm"))
      - defines: RUNMODE_STRING=\"$(join(${nuclei_cache},''))\"
        condition: $( join(${nuclei_cache},'') != "" )
      - defines: RUNMODE_ILM_EN=1
        condition: $( join(${nuclei_cache},'') != "" )
      - defines: RUNMODE_DLM_EN=1
        condition: $( join(${nuclei_cache},'') != "" )
      - defines: RUNMODE_CONTROL
        condition: $( join(${nuclei_cache},'') != "" )
    prebuild_steps: # could be override by app/bsp type
      command:
      description:
    postbuild_steps: # could be override by app/bsp type
      command:
      description:
