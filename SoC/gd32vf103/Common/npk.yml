## Package Base Information
## This npk.yml only works with Nuclei Studio 2023.10 or later
name: ssp-nsdk_gd32vf103
owner: nuclei
description: GD32VF103 SoC Support Package
type: ssp
keywords:
  - soc
  - risc-v
  - nuclei
license: Apache-2.0
homepage: https://rvmcu.com/site/gd32vf103/

packinfo:
  core_vendor: Nuclei
  vendor: GigaDevice
  name: GD32VF103
  doc:
    website: https://www.gigadevice.com/products/microcontrollers/gd32/risc-v/mainstream-line/gd32vf103-series/ # Website
    datasheet: http://www.gd32mcu.com/en/download/0?kw=GD32VF1 # SoC datasheet
    usermanual: http://www.gd32mcu.com/en/download/0?kw=GD32VF1 # User Manual
    extra:

## Package Dependency
dependencies:
  - name: csp-nsdk_nmsis
    version:

## Package Configurations
configuration:
  sysclk:
    default_value: hxtal_108mhz
    global: true
    type: choice
    description: System Clock in Hz
    choices:
      - name: hxtal_108mhz
        description: 108MHz HXTAL PLL
        info:
          - name: hz
            value: 108000000
          - name: src
            value: hxtal
      - name: hxtal_96mhz
        description: 96MHz HXTAL PLL
        info:
          - name: hz
            value: 96000000
          - name: src
            value: hxtal
      - name: hxtal_72mhz
        description: 72MHz HXTAL PLL
        info:
          - name: hz
            value: 72000000
          - name: src
            value: hxtal
      - name: hxtal_56mhz
        description: 56MHz HXTAL PLL
        info:
          - name: hz
            value: 56000000
          - name: src
            value: hxtal
      - name: hxtal_48mhz
        description: 48MHz HXTAL PLL
        info:
          - name: hz
            value: 48000000
          - name: src
            value: hxtal
      - name: hxtal_24mhz
        description: 24MHz HXTAL PLL
        info:
          - name: hz
            value: 24000000
          - name: src
            value: hxtal
      - name: irc8m_48mhz
        description: 48MHz IRC8M PLL
        info:
          - name: hz
            value: 48000000
          - name: src
            value: irc8m
      - name: irc8m_72mhz
        description: 72MHz IRC8M PLL
        info:
          - name: hz
            value: 72000000
          - name: src
            value: irc8m
      - name: irc8m_108mhz
        description: 108MHz IRC8M PLL
        info:
          - name: hz
            value: 108000000
          - name: src
            value: irc8m
  usbdriver:
    default_value: none
    global: true
    type: choice
    description: Select USB Driver Code
    choices:
      - name: none
        description: No USB Driver Code
      - name: device
        description: USB Device Driver Code
      - name: host
        description: USB Host Driver Code
      - name: both
        description: USB Host and Device Driver Code
  nuclei_core:
    default_value: n205
    type: choice
    global: true
    description: Nuclei RISC-V Core
    choices:
      - name: n205
        arch: rv32imac
        abi: ilp32
        cmodel: medlow
        tune: nuclei-200-series
        description: N205/Bumblebee Core(ARCH=rv32imac, ABI=ilp32)
  semihost:
    default_value: 0
    type: checkbox
    tips: "If semihosting is enabled, c library stub source files will not be copied"
    description: Enable Semihosting
  stdclib:
    default_value: newlib_nano
    type: choice
    global: true
    tips: "Select proper c library, code size usage newlib_full > nuclei_nano > libncrt, libncrt only works for rv32"
    description: Standard C Library
    choices:
      - name: newlib_full
        description: newlib with full feature
      - name: newlib_fast
        description: newlib nano with printf/scanf float
      - name: newlib_small
        description: newlib nano with printf float
      - name: newlib_nano
        description: newlib nano without printf/scanf float
      - name: libncrt_fast
        description: nuclei c runtime library, optimized for speed
      - name: libncrt_balanced
        description: nuclei c runtime library, balanced, full feature
      - name: libncrt_small
        description: nuclei c runtime library, optimized for size, full feature
      - name: libncrt_nano
        description: nuclei c runtime library, optimized for size, no float support
      - name: libncrt_pico
        description: nuclei c runtime library, optimized for size, no long/long long support
      - name: nostd
        description: no std c library will be used, and don't search the standard system directories for header files
      - name: nospec
        description: no std c library will be used, not pass any --specs options

## Source Code Management
codemanage:
  installdir: gd32vf103
  copyfiles:
    - path: ["Source/*.c", "Source/Drivers/*.c", "Source/GCC/", "Include/*.h", "gd32vf103.svd"]
    - path: ["Source/Stubs/newlib"]
      condition: $( startswith(${stdclib}, "newlib") && ${semihost} == 0 )
    - path: ["Source/Stubs/libncrt"]
      condition: $( startswith(${stdclib}, "libncrt") )
    - path: ["Source/Drivers/Usb/drv_usb_core.c", "Include/Usb/*.h",
             "Source/Drivers/Usb/drv_usb_host.c", "Source/Drivers/Usb/drv_usbh_int.c",
             "Source/Drivers/Usb/usbh_core.c", "Source/Drivers/Usb/usbh_enum.c",
             "Source/Drivers/Usb/usbh_pipe.c", "Source/Drivers/Usb/usbh_transc.c"]
      condition: $( ${usbdriver} == "host"  )
    - path: ["Source/Drivers/Usb/drv_usb_core.c", "Include/Usb/*.h",
             "Source/Drivers/Usb/drv_usb_dev.c", "Source/Drivers/Usb/drv_usbd_int.c",
             "Source/Drivers/Usb/usbd_core.c", "Source/Drivers/Usb/usbd_enum.c",
             "Source/Drivers/Usb/usbd_transc.c" ]
      condition: $( ${usbdriver} == "device"  )
    - path: ["Source/Drivers/Usb/*.c", "Include/Usb/*.h"]
      condition: $( ${usbdriver} == "both"  )
  incdirs:
    - path: ["Include"]
    - path: ["Include/Usb/"]
      condition: $( ${usbdriver} != "none" )

## Set Configuration for other packages
setconfig:
  - config: nmsislibarch
    value: ${nuclei_core.arch}

## Debug Configuration for this SoC
debugconfig:
  - type: openocd
    description: Nuclei OpenOCD
    svd: gd32vf103.svd

  - type: jlink
    description: Segger Jlink
    svd: gd32vf103.svd

## Build Configuration
buildconfig:
  - type: common
    common_flags: # flags need to be combined together across all packages
      - flags: -g -fno-common -ffunction-sections -fdata-sections
      - flags: -march=${nuclei_core.arch} -mabi=${nuclei_core.abi}
      - flags: -mcmodel=${nuclei_core.cmodel}
      - flags: -nostdinc
        condition: $( ${stdclib} == "nostd" )
      - flags:
        condition: $( ${stdclib} == "nospec" )
      - flags: -isystem=/include/libncrt
        condition: $( startswith(${stdclib}, "libncrt") )
      # For newlib nano, use system include newlib-nano
      - flags: -isystem=/include/newlib-nano
        condition: $( startswith(${stdclib}, "newlib") && ${stdclib} != "newlib_full" )
    ldflags:
      - flags: -nostartfiles -nodefaultlibs
      - flags: -lstdc++
        condition: $( startswith(${stdclib}, "newlib") )
      - flags: -lc -lgcc
        condition: $( ${stdclib} == "newlib_full" )
      - flags: -lc_nano -lgcc -u _printf_float -u _scanf_float
        condition: $( ${stdclib} == "newlib_fast" )
      - flags: -lc_nano -lgcc -u _printf_float
        condition: $( ${stdclib} == "newlib_small" )
      - flags: -l$(subst(${stdclib},lib,)) -lheapops_basic
        condition: $( startswith(${stdclib}, "libncrt") )
      - flags: -lfileops_semi
        condition: $( startswith(${stdclib}, "libncrt") && ${semihost} == 1 )
      - flags: -lfileops_uart
        condition: $( startswith(${stdclib}, "libncrt") && ${semihost} == 0 )
      # Workaround for libncrt possible linking error since ide dont support wrap search library
      # Require Nuclei Studio Plugin released in 2024
      - flags: -l$(subst(${stdclib},lib,))
        condition: $( startswith(${stdclib}, "libncrt") )
      - flags: -Wl,--gc-sections -Wl,--check-sections
    cflags:
    asmflags:
      - flags: -x assembler-with-cpp
    cxxflags:
    common_defines:
      - defines: SYSTEM_CLOCK=${sysclk.info.hz}
      - defines: SYSCLK_USING_$(upper(${sysclk.info.src}))
    prebuild_steps: # could be override by app/bsp type
      command:
      description:
    postbuild_steps: # could be override by app/bsp type
      command:
      description:

  - type: gcc
    description: Nuclei GNU Toolchain
    toolchain_name: RISC-V GCC/Newlib
    cross_prefix: riscv64-unknown-elf- # optional
    common_flags: # flags need to be combined together across all packages
      - flags: -mtune=${nuclei_core.tune}
        condition: $( ${nuclei_core.tune} != "" )
    ldflags:
      - flags: -Wl,--no-warn-rwx-segments
      - flags: -lc_nano -lgcc
        condition: $( ${stdclib} == "newlib_nano" )
      - flags: -lsemihost
        condition: $( startswith(${stdclib}, "newlib") && ${semihost} == 1 )
      - flags: -u _isatty -u _write -u _sbrk -u _read -u _close -u _fstat -u _lseek -u errno
        condition: $( startswith(${stdclib}, "newlib") )

  - type: clang
    description: Nuclei LLVM Toolchain
    toolchain_name: RISC-V Clang/Newlib
    cross_prefix: riscv64-unknown-elf- # optional
    common_flags: # flags need to be combined together across all packages
    ldflags:
      - flags: -fuse-ld=lld
      - flags: -u __on_exit_args
        condition: $( startswith(${stdclib}, "newlib") )
      - flags: -lc_nano -lgcc -u _printf_float
        condition: $( ${stdclib} == "newlib_nano" )
      - flags: -lsemihost
        condition: $( startswith(${stdclib}, "newlib") && ${semihost} == 1 )
